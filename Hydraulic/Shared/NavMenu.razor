@using Hydraulic
@using Hydraulic.HydraulicComponents;

@inject SpawnEvents SpawnEvents
@inject ComponentRegister registry  

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Hydraulic</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<h2>Components</h2>

<div class=" Components">
    <div class="grid-container">
        @foreach (var component in registry.GetComponents())
        {
            <div class="grid-item" @onclick='() => SpawnEvents.OnComponentClicked(component.Key)'>
                <img src="@component.Value.image" height="50px" width="50px" />
            </div>
        }
    </div>
</div>

<!--
<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </li>
    </ul>
</div>-->

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

}
